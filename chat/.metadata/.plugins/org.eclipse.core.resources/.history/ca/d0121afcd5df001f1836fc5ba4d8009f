package com.chat.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.chat.entites.Message;
import com.chat.entites.Room;
import com.chat.services.RoomService;

@RestController
@RequestMapping("/api/v1/rooms")
public class RoomController {
	
	@Autowired
	private RoomService roomService;
	
	//create room
	
	@PostMapping
	public ResponseEntity<?> crateRoom(@RequestBody String roomId) {
		
		if(!roomService.getRoom(roomId).isEmpty()) {
			return ResponseEntity.badRequest().body("Room already exist");
		}
		Room room= new Room();
		room.setRoomId(roomId);
		roomService.save(room);
		
		return ResponseEntity.status(HttpStatus.CREATED).body(room);
		
	}
	
	//get room
	
	@GetMapping("/{roomId}")
	public ResponseEntity<?> joinRoom(@PathVariable String roomId){
		Optional<Room> room=roomService.getRoom(roomId);
		if(room.isEmpty()) {
			return ResponseEntity.badRequest().body("Room not found");
		}
		
		return ResponseEntity.ok(room.get());
	}
	
	//get messages of room
	@GetMapping("/{roomId}/message")
	public ResponseEntity<List<Message>> getMessage(@PathVariable String roomId){
		
		Optional<Room> room = roomService.getRoom(roomId);
		
		List<Message> message = room.get().getMessages();
		
		return ResponseEntity.ok(message);
		
	}

}
